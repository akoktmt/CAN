#include "main.h"
#ifndef CAN_MUTIFRAME_H
#define CAN_MUTIFRAME_H
#define TIMEOUT_MS 5000
#define CAN_MAX_DATA_LENGTH 				(0x08)
#define FILL_VALUE 							(0x55)
#define MAX_BUFFER_SIZE 					128

#define ALL_NODE 							(0x00)
#define COMMAND_FRAME 						(0x01)
#define ACK_COMMAND_FRAME 					(0x02)
#define REMOTE_NOTICE_FRAME 				(0x03)
#define TEST_FRAME 							(0x04)
#define ACK_TEST_FRAME 						(0x05)

#define ALL_NODE 							0b0000
#define ENGINE_CONTROL						0b0001
#define LIGHT_GPS
#define MASTER
#define STEERING
#define POWER
#define OBSTALCE1
#define OBSTALCE2
#define OBSTALCE3
#define OBSTALCE4
#define OBSTALCE5
#define OBSTALCE6
#define OBSTALCE7
#define OBSTALCE8

#define END_FRAME 						(0x00)
#define FIRST_FRAME 					(0x01)
#define SECOND_FRAME 					(0x02)
#define THIRD_FRAME 					(0x03)
#define FOURTH_FRAME 					(0x04)
#define FIFTH_FRAME 					(0x05)
#define SIX_FRAME 						(0x06)
#define SEVEN_FRAME 					(0X07)

typedef struct CAN_HandlerStruct{
	CAN_HandleTypeDef* hcan;
	uint16_t SenderID;
	uint16_t fillterbank;
}CAN_HandlerStruct;
typedef struct {
	uint16_t MessageType;
	uint16_t TargetNode;
	uint16_t Frametype;
	uint8_t ReceivedBuffer[MAX_BUFFER_SIZE];
	uint8_t Index;
	uint8_t SenderID;
	uint8_t ExpectedLength;
	uint8_t frameLength;
	uint8_t isLastFrame;
}CANConfigIDRxtypedef;
typedef struct {
	uint16_t MessageType;
	uint16_t TargetNode;
	uint16_t Frametype;
	uint16_t SenderID;
}CANConfigIDTxtypedef;
typedef struct{
	CANdefineinit CANHandlerInit;
	CANConfigIDTxtypedef CANconfigIDTxInit;
	CANConfigIDRxtypedef CANconfigIDRxInit;
}CANInit;

uint8_t CAN_Receive_Dataframe(CANdefineinit* Canhandle,CANConfigIDRxtypedef* pIDtype,uint8_t *ReceiveData, uint32_t *ReceiveLength);
uint8_t CAN_Send_Dataframe(CANdefineinit* Canhandle,CANConfigIDTxtypedef* pIDtype, uint8_t *Data, uint32_t Datalength);
uint32_t CAN_Config_filtering(CANdefineinit *Can, uint16_t *NodeID);
uint8_t CAN_Send_Request(uint8_t *frame);
uint16_t CAN_RECEIVE_ACK(uint8_t *Data);
uint8_t CAN_Init(CANdefineinit* canhandler, CAN_HandleTypeDef hcan, uint16_t ID);

#endif
